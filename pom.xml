<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.1</version>
        <relativePath/>
    </parent>

    <groupId>com.nutcracker</groupId>
    <artifactId>fast-testing</artifactId>
    <version>2022.12.23-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- 编译打包时，不执行测试用例，也不编译测试用例类 -->
        <maven.test.skip>true</maven.test.skip>

        <!-- 仓库地址 -->
        <aliyun.nexus>https://maven.aliyun.com/repository/public</aliyun.nexus>
        <oss.release>https://oss.sonatype.org/content/repositories/snapshots</oss.release>
        <oss.snapshot>https://oss.sonatype.org/content/repositories/snapshots</oss.snapshot>
    </properties>

    <!--
    设置仓库的方式有两种，一种是在项目最顶级pom.xml中设置，另一种是在settings.xml中设置。
    寻找jar的基本优先级顺序：
    本地仓库 > settings.xml的profile的仓库 > pom.xml的profile的仓库 > pom.xml的仓库 > 中央仓库
    -->
    <!-- repository 表示下载项目依赖库文件的maven仓库地址 -->
    <repositories>
        <repository>
            <id>nexus</id>
            <url>${aliyun.nexus}</url>
            <!--<url>${oss.release}</url>-->
            <!--<url>${oss.snapshot}</url>-->
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>
    <!-- pluginRepositories 表示插件的下载仓库地址，字段和用法与repositories中的repository基本一致 -->
    <pluginRepositories>
        <pluginRepository>
            <id>nexus</id>
            <url>${aliyun.nexus}</url>
            <!--<url>${oss.release}</url>-->
            <!--<url>${oss.snapshot}</url>-->
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
    <!-- 表示项目打包成库文件后要上传到仓库地址 -->
    <!--<distributionManagement>-->
    <!--    &lt;!&ndash; 正式版本 &ndash;&gt;-->
    <!--    <repository>-->
    <!--        &lt;!&ndash; nexus服务器中用户名（settings.xml中<server>的id）&ndash;&gt;-->
    <!--        <id>release</id>-->
    <!--        &lt;!&ndash; 自定义名称 &ndash;&gt;-->
    <!--        <name>Nexus Releases Repository</name>-->
    <!--        <url>http://${nexus.url}/nexus/content//maven-releases/</url>-->
    <!--    </repository>-->
    <!--    &lt;!&ndash; 快照版本 &ndash;&gt;-->
    <!--    <snapshotRepository>-->
    <!--        &lt;!&ndash; nexus服务器中用户名（settings.xml中<server>的id）&ndash;&gt;-->
    <!--        <id>snapshots</id>-->
    <!--        &lt;!&ndash; 自定义名称 &ndash;&gt;-->
    <!--        <name>Nexus Releases Repository</name>-->
    <!--        <url>http://${nexus.url}/nexus/content//maven-snapshots/</url>-->
    <!--    </snapshotRepository>-->
    <!--</distributionManagement>-->

    <dependencies>
        <!-- SpringBoot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>spring-boot-starter-logging</artifactId>
                    <groupId>org.springframework.boot</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!--
        mybatis-plus 与 springboot3.x 有兼容性问题，mybatis-plus快照版本已经修复，需要到快照仓库下载
        官方文档：https://baomidou.com
        快照仓库地址：https://oss.sonatype.org/content/repositories/snapshots
        -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>3.5.2.7-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
        </dependency>

        <!-- log4j2 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>3.4.4</version>
        </dependency>

        <!-- thymeleaf -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
        </dependency>

        <!-- apache commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>4.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.11.0</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>

        <!-- https://hutool.cn/docs -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>5.8.10</version>
        </dependency>

        <!-- json -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>2.0.21</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.15.3</version>
        </dependency>

        <!-- redis -->
        <dependency>
            <groupId>org.redisson</groupId>
            <artifactId>redisson-spring-boot-starter</artifactId>
            <version>3.19.0</version>
        </dependency>

        <!--
        版本兼容问题
        Curator 2.x.x-兼容两个zk 3.4.x 和zk 3.5.x
        Curator 3.x.x-兼容兼容zk 3.5
        -->
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-framework</artifactId>
            <version>2.13.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-recipes</artifactId>
            <version>2.13.0</version>
        </dependency>

        <!--验证码-->
        <!-- https://github.com/pig-mesh/easy-captcha -->
        <dependency>
            <groupId>com.pig4cloud.plugin</groupId>
            <artifactId>captcha-spring-boot-starter</artifactId>
            <version>2.2.2</version>
        </dependency>
        <!--<dependency>-->
        <!--    <groupId>com.github.whvcse</groupId>-->
        <!--    <artifactId>easy-captcha</artifactId>-->
        <!--    <version>1.6.2</version>-->
        <!--</dependency>-->

        <!--硬件信息获取-->
        <dependency>
            <groupId>com.github.oshi</groupId>
            <artifactId>oshi-core</artifactId>
            <version>6.4.0</version>
        </dependency>

        <!--ip2region获取详细IP地址 -->
        <dependency>
            <groupId>org.lionsoul</groupId>
            <artifactId>ip2region</artifactId>
            <version>1.7</version>
        </dependency>

        <dependency>
            <groupId>nl.bitwalker</groupId>
            <artifactId>UserAgentUtils</artifactId>
            <version>1.2.4</version>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
            <scope>runtime</scope>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
